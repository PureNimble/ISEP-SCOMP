1) Padrões usados: Exclusão mútua.

2)
BEGIN

    DEFINE OUTPUT_FILE as "Output.txt"
    DEFINE NUMBERS_FILE as "Numbers.txt"
    DEFINE NUMBER_OF_CHILDREN as 8

    DEFINE main():
        DEFINE status, num, i
        DEFINE pidList[NUMBER_OF_CHILDREN]
        DEFINE t
        DEFINE sem[2]

        IF REMOVE OUTPUT_FILE == 0:
            PRINT "O conteudo do ficheiro " + OUTPUT_FILE + " foi apagado com sucesso"
        ELSE:
            PRINT "Erro ao apagar ficheiro Output.txt"
            EXIT -1

        DEFINE outputFile = fopen(OUTPUT_FILE, "w")

        IF outputFile == NULL:
            PRINT "Erro ao criar ficheiro Output.txt"
            EXIT -1

        END
        fclose(outputFile)

        sem[0] = sem_open("numbersSema", O_CREAT | O_EXCL, 0644, 1)
        sem[1] = sem_open("outputSema", O_CREAT | O_EXCL, 0644, 1)

        IF sem[0] == SEM_FAILED OR sem[1] == SEM_FAILED:
            PRINT "Erro no criar/abrir semaforo"
            EXIT -1

        END

        FOR i = 0 TO NUMBER_OF_CHILDREN:
            pidList[i] = fork()

            IF pidList[i] < 0:
                PRINT "Erro ao criar o processo"
                EXIT -1
            ELSE IF pidList[i] == 0:
                DEFINE j, randomNum, opt = i + 1
                srand ((unsigned) time(&t) * getpid())
                randomNum = (rand() % 5) + 1
                WAIT sem[0]
                DEFINE numFile
                numFile = fopen(NUMBERS_FILE, "r")

                IF numFile == NULL:
                    PRINT "Erro ao procurar ficheiro"
                    EXIT -1

                END

                FOR j = 0 TO opt:
                    fscanf(numFile, "%d", &num)
                END

                fclose(numFile)
                SIGNAL sem[0]
                SLEEP randomNum
                WAIT sem[1]
                outputFile = fopen(OUTPUT_FILE, "a")

                IF outputFile == NULL:
                    PRINT "Erro ao abrir ficheiro Output.txt"
                    EXIT -1

                END

                fprintf(outputFile, "[%d]%d\n", getpid(), num)
                fclose(outputFile)
                SIGNAL sem[1]
                EXIT 0

            END

        END

        FOR i = 0 TO NUMBER_OF_CHILDREN:
            waitpid(pidList[i], &status, 0)
        END

        outputFile = fopen(OUTPUT_FILE, "a")

        IF outputFile == NULL:
            PRINT "Erro ao abrir ficheiro Output.txt"
            EXIT -1

        END

        WHILE fscanf(outputFile, "%d", &num) != EOF:
            PRINT "Número lido do ficheiro Output.txt:" + num
        END

        fclose(outputFile)

        IF sem_close(sem[0]) < 0 OR sem_close(sem[1]) < 0:
            PRINT "Erro ao fechar semaforo"
            EXIT -1

        END

        IF sem_unlink("numbersSema") < 0 OR sem_unlink("outputSema") < 0:
            PRINT "Erro ao fechar semaforo"
            EXIT -1

        END
        RETURN 0
    END
END
